services:
  eme_front:
    # image: 975049932770.dkr.ecr.sa-east-1.amazonaws.com/sitio-web/frontend:latest
    image: alejoczombos/eme-front:latest
    ports:
      - "80:80"
    depends_on:
      - eme_back
    networks:
      - app-network

  eme_back:
    image: 975049932770.dkr.ecr.sa-east-1.amazonaws.com/sitio-web/backend:latest
    #image: alejoczombos/eme-back:latest
    ports:
      - "8000:8000"
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      SECRET: ${SECRET}
      S3_BUCKET: ${S3_BUCKET}
      S3_REGION: ${S3_REGION}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_ACCESS: ${S3_SECRET_ACCESS}
      RCIA_ADMIN_NAME: ${RCIA_ADMIN_NAME}
      RCIA_ADMIN_PASSWORD: ${RCIA_ADMIN_PASSWORD}
      CTES_ADMIN_NAME: ${CTES_ADMIN_NAME}
      CTES_ADMIN_PASSWORD: ${CTES_ADMIN_PASSWORD}
      RSP_ADMIN_NAME: ${RSP_ADMIN_NAME}
      RSP_ADMIN_PASSWORD: ${RSP_ADMIN_PASSWORD}
      SUPER_ADMIN_NAME: ${SUPER_ADMIN_NAME}
      SUPER_ADMIN_PASSWORD: ${SUPER_ADMIN_PASSWORD}
    depends_on:
      eme_db:
        condition: service_healthy
    networks:
      - app-network

  eme_db:
    image: mysql:8.0
    container_name: eme_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u<user>", "-p<password>"] # Ajusta user/password si no usas root
      interval: 10s # Intervalo entre chequeos
      timeout: 5s  # Tiempo máximo para que el chequeo responda
      retries: 5   # Número de reintentos antes de marcar como no saludable
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
